// Copyright (c) 2023 Ziga Miklosic
// All Rights Reserved
// This software is under MIT licence (https://opensource.org/licenses/MIT)
////////////////////////////////////////////////////////////////////////////////
/**
*@file      serial.cpp
*@brief     Serial COM port
*@author    Ziga Miklosic
*@email     ziga.miklosic@gmail.com
*@date      31.10.2023
*@version   V0.1.0
*/
////////////////////////////////////////////////////////////////////////////////
/*!
* @addtogroup SERIAL
* @{ <!-- BEGIN GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include "serial.h"

// Serial Port
#include <QtSerialPort/QSerialPort>
#include <QtSerialPort/QSerialPortInfo>

// TODO: Debug only
#include <QDebug>


////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Variables
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function prototypes
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////
/**
* @} <!-- END GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/**
*@addtogroup SERIAL_API
* @{ <!-- BEGIN GROUP -->
*
* 	Following function are part of Serial API.
*/
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
/*!
* @brief    	Serial Class Constructor
*
* @return       void
*/
////////////////////////////////////////////////////////////////////////////////
SerialPort::SerialPort(const serial_cfg_t * const p_cfg)
{
    qInfo() << "Serial Port created";
}

////////////////////////////////////////////////////////////////////////////////
/*!
* @brief    	Serial Class Desctructor
*
* @return       void
*/
////////////////////////////////////////////////////////////////////////////////
SerialPort::~SerialPort(void)
{
    qInfo() << "Serial Port desctructed";
}

void SerialPort::show_ports()
{
    const QList<QSerialPortInfo> serialPortInfos = QSerialPortInfo::availablePorts();

    qInfo() << "Founded" << QString::number( serialPortInfos.size() ) << "COM ports!";
    qInfo() << "-------------------------------------------------------------";

    for ( const QSerialPortInfo &portInfo : serialPortInfos )
    {
        qInfo() << "Port: " << portInfo.portName();
    }

    qInfo() << "-------------------------------------------------------------";
}

const QList<serial_info_t> SerialPort::serial_ports_info()
{
    QList<serial_info_t> info;

    const QList<QSerialPortInfo> serialPortInfos = QSerialPortInfo::availablePorts();

    for ( const QSerialPortInfo &portInfo : serialPortInfos )
    {

        // Create serial info
        const serial_info_t ser_info =
        {
            .name = portInfo.portName(),
            .desc = portInfo.description(),
        };

        // Add to information list
        info.append( ser_info );
    }

    return info;
}


////////////////////////////////////////////////////////////////////////////////
/**
* @} <!-- END GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////


